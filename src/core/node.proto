package saliency_sandbox.core.generated;

message Pipeline {
    optional string name = 1;

    message Node {
        optional string name = 1;

        enum Type {
            // Kitti-Dataset
            KittiReader                 = 101;
            KittiCalibrationReader      = 102;
            KittiLeftGrayImageReader    = 103;
            KittiRightGrayImageReader   = 104;
            KittiLeftRGBImageReader     = 105;
            KittiRightRGBImageReader    = 106;
            KittiOXTSReader             = 107;
            KittiTrackletReader         = 108;
            KittiVelodyneReader         = 109;
            KittiVelodynePolar          = 110;
            KittiOXTSSelector           = 111;
            KittiTrackletSaliency       = 112;
            KittiTrackletDraw           = 113;
            KittiEgoMotion              = 114;
            KittiOXTSPose               = 115;
            KittiDrawTrajectory         = 116;
            KittiFOVToCam               = 117;
            KittiDrawBirdView           = 118;

            // IO
            IOCSVReader                 = 201;
            IODirectoryScanner          = 202;
            IOImageReader               = 203;
            IOImageShow                 = 204;
            IOImageWriter               = 205;
            IOVideoReader               = 206;
            IOVideoWriter               = 207;

            // Utils
            UtilsImageConverter         = 301;
            UtilsFPSCounter             = 302;
            UtilsMatrixSplit            = 303;
            UtilsMatrixMerge            = 304;
            UtilsMatrixSum              = 305;
            UtilsNormalize              = 306;

            // Saliency
            SaliencySpectralWhitening   = 401;
            SaliencyBooleanMaps         = 402;
            SaliencyHighpass            = 403;
            SaliencyPearson             = 404;
            SaliencyIttiKoch            = 405;
            SaliencyOrientation         = 406;
            SaliencyGBVS                = 407;
            SaliencyTracking            = 408;

            // Plot
            Plot                        = 501;
            PlotQuiver                  = 502;

            // Optical Flow
            OpticalFlow                 = 601;
            ExtrapolatePose             = 602;

            // Gaze
            GazeRandom                  = 701;
            GazeSelector                = 702;
            GazeMovementSelector        = 703;
            GazeFOV                     = 704;
        }

        required Type type = 2;

        message Input {
            required string node = 1;
            required uint32 port = 2;
        }

        repeated Input input = 3;

        message Argument {
            required string name = 1;

            enum Type {
                // boolean
                pb_bool = 1;

                // signed integers
                pb_int8  = 2;
                pb_int16 = 3;
                pb_int32 = 4;
                pb_int64 = 5;

                // unsigend integers
                pb_uint8  = 6;
                pb_uint16 = 7;
                pb_uint32 = 8;
                pb_uint64 = 9;

                // floating points
                pb_float32 = 10;
                pb_float64 = 11;

                // string
                pb_string = 12;

                // complex (such as objects, unions)
                pb_complex = 13;
            }

            required Type   type   = 2;
            optional string value  = 4;
        }

        repeated Argument argument = 4;

        message Property {
            required string name = 1;

            enum Type {
                pb_bool   = 1;
                pb_int    = 2;
                pb_float  = 3;
                pb_string = 4;
            }

            required Type   type   = 2;
            required string value  = 4;
        }

        repeated Property property = 5;
    }

    repeated Node node = 2;
}